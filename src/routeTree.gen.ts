/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TableRouteImport } from './routes/table'
import { Route as ModalRouteImport } from './routes/modal'
import { Route as DropdownRouteImport } from './routes/dropdown'
import { Route as ButtonsRouteImport } from './routes/buttons'
import { Route as AccordionRouteImport } from './routes/accordion'
import { Route as IndexRouteImport } from './routes/index'

const TableRoute = TableRouteImport.update({
  id: '/table',
  path: '/table',
  getParentRoute: () => rootRouteImport,
} as any)
const ModalRoute = ModalRouteImport.update({
  id: '/modal',
  path: '/modal',
  getParentRoute: () => rootRouteImport,
} as any)
const DropdownRoute = DropdownRouteImport.update({
  id: '/dropdown',
  path: '/dropdown',
  getParentRoute: () => rootRouteImport,
} as any)
const ButtonsRoute = ButtonsRouteImport.update({
  id: '/buttons',
  path: '/buttons',
  getParentRoute: () => rootRouteImport,
} as any)
const AccordionRoute = AccordionRouteImport.update({
  id: '/accordion',
  path: '/accordion',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/accordion': typeof AccordionRoute
  '/buttons': typeof ButtonsRoute
  '/dropdown': typeof DropdownRoute
  '/modal': typeof ModalRoute
  '/table': typeof TableRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/accordion': typeof AccordionRoute
  '/buttons': typeof ButtonsRoute
  '/dropdown': typeof DropdownRoute
  '/modal': typeof ModalRoute
  '/table': typeof TableRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/accordion': typeof AccordionRoute
  '/buttons': typeof ButtonsRoute
  '/dropdown': typeof DropdownRoute
  '/modal': typeof ModalRoute
  '/table': typeof TableRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/accordion' | '/buttons' | '/dropdown' | '/modal' | '/table'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/accordion' | '/buttons' | '/dropdown' | '/modal' | '/table'
  id:
    | '__root__'
    | '/'
    | '/accordion'
    | '/buttons'
    | '/dropdown'
    | '/modal'
    | '/table'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccordionRoute: typeof AccordionRoute
  ButtonsRoute: typeof ButtonsRoute
  DropdownRoute: typeof DropdownRoute
  ModalRoute: typeof ModalRoute
  TableRoute: typeof TableRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/table': {
      id: '/table'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof TableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/modal': {
      id: '/modal'
      path: '/modal'
      fullPath: '/modal'
      preLoaderRoute: typeof ModalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dropdown': {
      id: '/dropdown'
      path: '/dropdown'
      fullPath: '/dropdown'
      preLoaderRoute: typeof DropdownRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/buttons': {
      id: '/buttons'
      path: '/buttons'
      fullPath: '/buttons'
      preLoaderRoute: typeof ButtonsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accordion': {
      id: '/accordion'
      path: '/accordion'
      fullPath: '/accordion'
      preLoaderRoute: typeof AccordionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccordionRoute: AccordionRoute,
  ButtonsRoute: ButtonsRoute,
  DropdownRoute: DropdownRoute,
  ModalRoute: ModalRoute,
  TableRoute: TableRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
